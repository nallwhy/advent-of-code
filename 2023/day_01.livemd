# Day 1: Trebuchet?!

```elixir
Mix.install([:kino])

input = Kino.Input.textarea("Please paste your input:")
```

## Root

```elixir
data =
  input
  |> Kino.Input.read()
  |> String.split("\n", trim: true)
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

[![Run in Livebook](https://livebook.dev/badge/v1/blue.svg)](https://livebook.dev/run?url=https%3A%2F%2Fgithub.com%2Fnallwhy%2Fadvent-of-code%2Fblob%2Fmain%2F2023%2Fday_01.livemd)

https://adventofcode.com/2023/day/1

```elixir
data
|> Enum.map(fn calibration ->
  Regex.replace(~r/[^\d]/, calibration, "")
  |> String.codepoints()
  |> then(&[List.first(&1), List.last(&1)])
  |> Enum.join()
  |> String.to_integer()
end)
|> Enum.sum()
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

https://adventofcode.com/2023/day/1#part2

```elixir
defmodule Day01.Part2 do
  def run(data) do
    data
    |> Enum.map(fn calibration ->
      do_run(calibration, [])
      |> Enum.reverse()
      |> then(&([List.first(&1), List.last(&1)] |> Enum.join() |> String.to_integer()))
    end)
    |> Enum.sum()
  end

  defp do_run("", result) do
    result
  end

  [
    {"one", 1},
    {"two", 2},
    {"three", 3},
    {"four", 4},
    {"five", 5},
    {"six", 6},
    {"seven", 7},
    {"eight", 8},
    {"nine", 9}
  ]
  |> Enum.map(fn {number_string, number} ->
    defp do_run(unquote(number_string) <> _rest = string, result) do
      do_run(remove_first_letter(string), [unquote(number) | result])
    end

    defp do_run(unquote(number |> Integer.to_string()) <> _rest = string, result) do
      do_run(remove_first_letter(string), [unquote(number) | result])
    end
  end)

  defp do_run(not_matched_string, result) do
    do_run(remove_first_letter(not_matched_string), result)
  end

  defp remove_first_letter(<<_::utf8>> <> rest) do
    rest
  end
end

Day01.Part2.run(data)
```
