# Day 2: Cube Conundrum

```elixir
Mix.install([:kino])

input = Kino.Input.textarea("Please paste your input:")
```

## Part 1

[![Run in Livebook](https://livebook.dev/badge/v1/blue.svg)](https://livebook.dev/run?url=https%3A%2F%2Fgithub.com%2Fnallwhy%2Fadvent-of-code%2Fblob%2Fmain%2F2023%2Fday_02.livemd)

https://adventofcode.com/2023/day/2

```elixir
data =
  input
  |> Kino.Input.read()
  |> String.split("\n", trim: true)
```

```elixir
cubes = %{
  red: 12,
  green: 13,
  blue: 14
}

game_data =
  data
  |> Enum.map(fn game_str ->
    ["Game " <> game_id_str, sets_str] = game_str |> String.split(":")

    game_id = game_id_str |> String.to_integer()

    sets =
      sets_str
      |> String.split(";")
      |> Enum.map(fn set_str ->
        set_str
        |> String.split(",")
        |> Enum.map(fn subset_str ->
          {number, color_str} = subset_str |> String.trim() |> Integer.parse()
          {number, color_str |> String.trim() |> String.to_existing_atom()}
        end)
      end)

    {game_id, sets}
  end)

game_data
|> Enum.filter(fn {_game_id, sets} ->
  sets
  |> Enum.all?(fn set ->
    set
    |> Enum.all?(fn {number, color} -> number <= cubes[color] end)
  end)
end)
|> Enum.map(fn {game_id, _sets} -> game_id end)
|> Enum.sum()
```

## Part 2

https://adventofcode.com/2023/day/2#part2

```elixir
game_data
|> Enum.map(fn {_game_id, sets} ->
  sets
  |> Enum.reduce(%{red: 0, green: 0, blue: 0}, fn set, acc ->
    set
    |> Enum.reduce(acc, fn {number, color}, acc ->
      case acc[color] < number do
        true -> acc |> Map.put(color, number)
        false -> acc
      end
    end)
  end)
end)
|> Enum.map(fn mins -> mins |> Map.values() |> Enum.product() end)
|> Enum.sum()
```
